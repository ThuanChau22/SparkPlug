@startuml
left to right direction
skinparam classAttributeIconSize 0
skinparam packageStyle rectangle


'package "Frontend" {
'    class Dashboard {
'        +run()
'    }
'}

package "Services" {
    package "Analytics Service" {
        class AnalyticsServiceApp {
            -AnalyticsEngine
            +run()
        }

        class AnalyticsEngine {
            -User
            +processRevenue()
            +processEnergyCost()
            +processEnergyConsumption()
            +processPeakTime()
            +processSessionCounts()
            +processUtilizationRate()
            +processChargerCounts()
            +processStationGrowth()
            +processUserGrowth()
        }
    }

    package "Management Service" {
        class ManagementServiceApp {
            -User
            -instantiateUser()
            +run()
        }
    }

    package "AI  Service" {
        class AIServiceApp {
            +run()
        }
        class EnergyConsumptionForecaster {
            +forecastConsumption()
        }
        class InfrastructureGrowthPredictor {
            +predictGrowth()
        }
        class InfrastructureLocationRecommender {
            +recommendLocations()
        }
        class ChargerAvailabilityPredictor {
            +predictAvailability()
        }
    }
}

package "User Models" {
    class User {
        -CRUDTools
        -AnalyticsTools
    }   

    class Manager extends User {
    }

    class Admin extends Manager {
    }
    
    class Owner extends Manager {
    }
    
    class Driver extends User {
    }

    package "Data Access Layer"{  
        class CRUDTools {
            +createSite()
            +readSite()
            +updateSite()
            +deleteSite()
            +createStation()
            +readStation()
            +updateStation()
            +deleteStation()
            +createEVSE()
            +readEVSE()
            +updateEVSE()
            +deleteEVSE()
        }
        
        class AnalyticsTools {
            +getTransactions()
        }
    }
}

package "Database Managers" {
    class MySQLManager {
        +executeSQL()
    }
    
    class MongoDBManager {
        +executeMongoQuery()
    }
}

' Hidden connection to enforce layout preference
' EnergyConsumptionForecaster -[hidden]- AnalyticsServiceApp

'Dashboard ..> AnalyticsServiceApp : REST API
'Dashboard ..> ManagementServiceApp : REST API

AIServiceApp ..> ChargerAvailabilityPredictor : uses
AIServiceApp ..> EnergyConsumptionForecaster : uses
AIServiceApp ..> InfrastructureGrowthPredictor : uses
AIServiceApp ..> InfrastructureLocationRecommender : uses

AnalyticsServiceApp ..> AnalyticsEngine : uses
AnalyticsEngine ..> User : uses
AnalyticsEngine ..> AIServiceApp : REST API
AnalyticsEngine ..> ManagementServiceApp : REST API

ManagementServiceApp ..> User : uses

User +-- AnalyticsTools
User +-- CRUDTools

CRUDTools ..> MySQLManager : uses
AnalyticsTools ..> MongoDBManager : uses

Admin ..> CRUDTools : <<override>>
Admin ..> AnalyticsTools : <<override>>
Owner ..> CRUDTools : <<override>>
Owner ..> AnalyticsTools : <<override>>
Driver ..> CRUDTools : <<override>>
Driver ..> AnalyticsTools : <<override>>
Manager ..> CRUDTools : <<override>>


@enduml
